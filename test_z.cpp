#include "stdafx.h"
#include <iostream>
#include <algorithm>
using namespace std;

//здесь вводим переменные
int n, i = 0;
bool flag = false; 
struct pt {
	int x, y; //координаты начала и конца
};

//здесь обрабатываем данные
inline bool getAllConnections(int n) {
	pt *a = new pt[n]; //динамический массив для экономии места
	while (i < n){
		if (i > 1){
			a[i - 1].x = max(a[i - 2].x, a[i - 1].x);
			a[i - 1].y = min(a[i - 2].y, a[i - 1].y); //устанавливаем границы, где оба отрезка имеют общие точки
			cout << "Границы пересекаемости отрезков: [" << a[i - 1].x << "; " << a[i - 1].y << "]" << endl;
		}
		cout << "Введите координаты " << i + 1 << "-го отрезка" << endl;
		cin >> a[i].x >> a[i].y;
		if (a[i].x > a[i].y)  swap(a[i].x, a[i].y); // если ввели начало правее конца на оси, то меняем их местами
		if (i > 1) { //начинаем проверять на пересечение со второго отрезка
		if (max(a[i].x, a[i - 1].x) <= min(a[i].y, a[i - 1].y)) flag = true; //если начало самого левого отрезка лежит на оси левее их концов (или соприкасается), то у отрезков есть точки соприкосновения
		else {
			flag = false;
			break; //если имеется хоть одно несовпадение — меняем флаг и выходим из цикла
		}
		}
		i++;
	}
	delete[] a;
	return flag;
}

int main() {
	setlocale(LC_ALL, "Russian");
	cout << "Введите количество отрезков" << endl;
	cin >> n;
	if (n > 1) { //незачем что-то делать, если ввели неправильное количество отрезков
		if (getAllConnections(n)) cout << "Есть общие точки" << endl;
		else cout << "Нет точек" << endl;
	}
	else cout << "Введено некорректное количество отрезков (для нахождения пересечений надо ввести количество 2 или больше)" << endl;
	return 0;
}
